{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodri\\\\Desktop\\\\mis proyectos\\\\SCL012-Social-Network-Frameworks\\\\social-network\\\\src\\\\views\\\\Login.jsx\";\nimport React, { Component } from 'react';\nimport { firebase } from '../firebase';\nimport Logo from '../img/logo.png';\nimport Brujo from '../img/brujo.png';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: null\n    };\n  }\n\n  componentWillMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      this.setState({\n        user\n      });\n    });\n  }\n\n  handleAuth() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(result => console.log(`${result.user.email} ha iniciado sesión`)).catch(error => console.log(`Error ${error.code}: ${error.message}`));\n  }\n\n  renderLoginButton() {\n    // Si el usuario esta logueado\n    if (this.state.user) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: this.state.user.photoURL,\n        alt: this.state.user.displayName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 20\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, \"Hola \", this.state.user.displayName));\n    } else {\n      //Si no lo está\n\n      /*#__PURE__*/\n      React.createElement(\"button\", {\n        onClick: this.handleAuth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, \"Login con Google\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loginPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"imgLogo\",\n      alt: \"logo\",\n      src: Logo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"login\",\n      id: \"correo\",\n      placeholder: \"Correo Electr\\xF3nico\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"password\",\n      id: \"contrase\\xF1a\",\n      placeholder: \"Contrase\\xF1a\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Iniciar Sesi\\xF3n\"), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"brujo\",\n      alt: \"brujo\",\n      src: Brujo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }), this.renderLoginButton());\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/rodri/Desktop/mis proyectos/SCL012-Social-Network-Frameworks/social-network/src/views/Login.jsx"],"names":["React","Component","firebase","Logo","Brujo","Login","constructor","state","user","componentWillMount","auth","onAuthStateChanged","setState","handleAuth","provider","GoogleAuthProvider","signInWithPopup","then","result","console","log","email","catch","error","code","message","renderLoginButton","photoURL","displayName","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { firebase } from '../firebase';\r\nimport Logo from '../img/logo.png';\r\nimport Brujo from '../img/brujo.png'\r\n\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            user: null\r\n        };\r\n    }\r\n\r\n    componentWillMount () {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            this.setState ({ user });   \r\n        })\r\n    }\r\n    handleAuth () {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n        firebase.auth().signInWithPopup(provider)\r\n        .then(result => console.log(`${result.user.email} ha iniciado sesión`))\r\n        .catch(error => console.log(`Error ${error.code}: ${error.message}`));\r\n    }\r\n\r\n    renderLoginButton () {\r\n        // Si el usuario esta logueado\r\n        if (this.state.user) {\r\n            return (\r\n                <div>\r\n                   <img src={this.state.user.photoURL} alt={this.state.user.displayName} /> \r\n                    <p>Hola {this.state.user.displayName}</p>\r\n\r\n                </div>\r\n            );\r\n        } else {\r\n            //Si no lo está\r\n            <button onClick={this.handleAuth}>Login con Google</button> \r\n        }\r\n    }\r\n    render () {\r\n        return(\r\n            <div className=\"loginPage\">\r\n                <img className=\"imgLogo\" alt=\"logo\" src={Logo} />\r\n                <input type=\"text\" className=\"login\" id=\"correo\" placeholder=\"Correo Electrónico\" required />\r\n                <input type=\"text\" className=\"password\" id=\"contraseña\" placeholder=\"Contraseña\" required />\r\n                <button className=\"btn\">Iniciar Sesión</button>  \r\n                <img className=\"brujo\" alt=\"brujo\" src={Brujo} />   \r\n                { this.renderLoginButton() }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}