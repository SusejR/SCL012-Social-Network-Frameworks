{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodri\\\\Desktop\\\\mis proyectos\\\\SCL012-Social-Network-Frameworks\\\\social-network\\\\src\\\\views\\\\Login.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { firebase } from '../firebase';\nimport Logo from '../img/logo.png';\nimport Brujo from '../img/brujo.png';\nexport default class Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: null\n    };\n    this.handleAuth = this.handleAuth.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n  /* Mediante este método verificamos si el user tiene algún contenido y si tiene contenido actualizamos el estado\r\n  y el componente se vuelve a renderizar*/\n\n\n  componentWillMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      this.setState({\n        user\n      });\n    });\n  } // Función para iniciar Sesión\n\n\n  handleAuth() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(result => console.log(`${result.user.email} ha iniciado sesión`)).catch(error => console.log(`Error ${error.code}: ${error.message}`));\n  } // Función para Cerrar Sesión\n\n\n  handleLogout() {\n    firebase.auth().signOut().then(result => console.log(`${result.user.email} ha cerrado sesión`)).catch(error => console.log(`Error ${error.code}: ${error.message}`));\n  } // Función que verifica si el usuario esta logueado o no\n\n\n  renderLoginButton() {\n    // Si el usuario esta logueado\n    if (this.state.user) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: this.state.user.photoURL,\n        alt: this.state.user.displayName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 20\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, \"Hola \", this.state.user.displayName), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleLogout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, \"Cerrar Sesi\\xF3n\"));\n    } else {\n      //Si no lo está\n      return /*#__PURE__*/React.createElement(Link, {\n        to: \"/Home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleAuth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, \"Login con Google\"));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Link, {\n      to: \"/Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loginPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"imgLogo\",\n      alt: \"logo\",\n      src: Logo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"login\",\n      id: \"correo\",\n      placeholder: \"Correo Electr\\xF3nico\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"password\",\n      id: \"contrase\\xF1a\",\n      placeholder: \"Contrase\\xF1a\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"Iniciar Sesi\\xF3n\"), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"brujo\",\n      alt: \"brujo\",\n      src: Brujo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }), this.renderLoginButton()));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/rodri/Desktop/mis proyectos/SCL012-Social-Network-Frameworks/social-network/src/views/Login.jsx"],"names":["React","Component","Link","firebase","Logo","Brujo","Login","constructor","state","user","handleAuth","bind","handleLogout","componentWillMount","auth","onAuthStateChanged","setState","provider","GoogleAuthProvider","signInWithPopup","then","result","console","log","email","catch","error","code","message","signOut","renderLoginButton","photoURL","displayName","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { firebase } from '../firebase';\r\nimport Logo from '../img/logo.png';\r\nimport Brujo from '../img/brujo.png';\r\n\r\n\r\n\r\n export default class Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            user: null\r\n        };\r\n        \r\n        this.handleAuth=this.handleAuth.bind(this);\r\n        this.handleLogout=this.handleLogout.bind(this);\r\n    }\r\n    /* Mediante este método verificamos si el user tiene algún contenido y si tiene contenido actualizamos el estado\r\n    y el componente se vuelve a renderizar*/ \r\n    \r\n    componentWillMount () {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            this.setState ({ user });   \r\n        })\r\n    }\r\n    // Función para iniciar Sesión\r\n    handleAuth () {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n        firebase.auth().signInWithPopup(provider)\r\n        .then(result => console.log(`${result.user.email} ha iniciado sesión`))\r\n        .catch(error => console.log(`Error ${error.code}: ${error.message}`));\r\n    }\r\n    // Función para Cerrar Sesión\r\n    handleLogout () {\r\n        firebase.auth().signOut()\r\n        .then(result => console.log(`${result.user.email} ha cerrado sesión`))\r\n        .catch(error => console.log(`Error ${error.code}: ${error.message}`));\r\n    }\r\n    // Función que verifica si el usuario esta logueado o no\r\n    renderLoginButton () {\r\n        // Si el usuario esta logueado\r\n        if (this.state.user) {\r\n            return (\r\n                <div>\r\n                   <img src={this.state.user.photoURL} alt={this.state.user.displayName} /> \r\n                    <p>Hola {this.state.user.displayName}</p>\r\n                    <button onClick={this.handleLogout}>Cerrar Sesión</button>\r\n\r\n                </div>\r\n            );\r\n        } else {\r\n            //Si no lo está\r\n            return (\r\n                <Link to='/Home'>\r\n                    <button onClick={this.handleAuth}>Login con Google</button> \r\n                </Link>\r\n\r\n            );\r\n            \r\n        }\r\n    }\r\n    render () {\r\n        return(\r\n            <Link to='/Home'>\r\n                  <div className=\"loginPage\">\r\n                <img className=\"imgLogo\" alt=\"logo\" src={Logo} />\r\n                <input type=\"text\" className=\"login\" id=\"correo\" placeholder=\"Correo Electrónico\" required />\r\n                <input type=\"text\" className=\"password\" id=\"contraseña\" placeholder=\"Contraseña\" required />\r\n                <button className=\"btn\">Iniciar Sesión</button>  \r\n                <img className=\"brujo\" alt=\"brujo\" src={Brujo} />   \r\n                { this.renderLoginButton() }\r\n            </div>\r\n            </Link>\r\n          \r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}