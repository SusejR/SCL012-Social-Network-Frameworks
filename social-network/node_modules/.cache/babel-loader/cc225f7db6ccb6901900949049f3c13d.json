{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodri\\\\Desktop\\\\mis proyectos\\\\SCL012-Social-Network-Frameworks\\\\social-network\\\\src\\\\views\\\\Home.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { db, firebase } from '../firebase';\nimport Logo from '../img/logo.png';\nexport default class Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: [],\n      inputValue: \"\",\n      edit: false,\n      id: \"\",\n      notification: false,\n      message: \"\"\n    };\n\n    this.changeValue = e => {\n      this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    this.savePost = () => {\n      const {\n        inputValue,\n        edit\n      } = this.state;\n      !edit ? db.collection(\"userPosts\").add({\n        post: inputValue\n      }).then(() => {\n        this.message('agregado');\n      }).catch(() => {\n        this.message('error');\n      }) : this.update();\n      this.setState({\n        inputValue: \"\"\n      });\n    };\n\n    this.getPosts = id => {\n      let docRef = db.collection(\"userPosts\").doc(id);\n      docRef.get().then(doc => {\n        if (doc.exists) {\n          this.setState({\n            inputValue: doc.data().post,\n            edit: true,\n            id: doc.id\n          });\n        } else {\n          console.log('El documento no existe');\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.update = () => {\n      const {\n        id,\n        inputValue\n      } = this.state;\n      db.collection(\"userPosts\").doc(id).update({\n        post: inputValue\n      }).then(() => {\n        this.message('actualizado');\n      }).catch(error => {\n        this.message('error');\n      });\n    };\n\n    this.deletePost = id => {\n      db.collection(\"userPosts\").doc(id).delete();\n    };\n\n    this.message = message => {\n      this.setState({\n        notification: true,\n        message: message\n      });\n    };\n  }\n\n  componentDidMount() {\n    db.collection(\"userPosts\").onSnapshot(snapShots => {\n      this.setState({\n        posts: snapShots.docs.map(doc => {\n          return {\n            id: doc.id,\n            data: doc.data()\n          };\n        })\n      });\n    });\n  } // Funci贸n para Cerrar Sesi贸n\n\n\n  handleLogout() {\n    firebase.auth().signOut().then(result => console.log(`${result.user.email} ha cerrado sesi贸n`)).catch(error => console.log(`Error ${error.code}: ${error.message}`));\n  } //Funci贸n que actualiza el estado para colocarle el valor que tiene el input de comentario\n\n\n  render() {\n    const {\n      posts,\n      inputValue,\n      notification,\n      message\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"fragment\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"nav-wrapper orange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      src: Logo,\n      class: \"brand-logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"nav-mobile\",\n      class: \"right hide-on-med-and-down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"sass.html\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 37\n      }\n    }, \"Inicio\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"badges.html\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 37\n      }\n    }, \"Mi Perfil\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"imgLogo\",\n      alt: \"logo\",\n      src: Logo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createPost\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"white-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 22\n      }\n    }, \"Realizar una Nueva Publicaci\\xF3n\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: this.changeValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn orange\",\n      onClick: this.savePost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 22\n      }\n    }, \"Publicar\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"showPost\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 18\n      }\n    }, posts && posts !== undefined ? posts.map((post, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 30\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 34\n        }\n      }, post.data.post), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn orange\",\n        onClick: () => this.getPosts(post.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 34\n        }\n      }, \"Editar\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn orange\",\n        onClick: () => this.deletePost(post.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 34\n        }\n      }, \"Eliminar\"));\n    }) : null), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn orange\",\n      onClick: this.handleLogout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, \"Cerrar Sesi\\xF3n\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/rodri/Desktop/mis proyectos/SCL012-Social-Network-Frameworks/social-network/src/views/Home.jsx"],"names":["React","Component","Link","db","firebase","Logo","Home","state","posts","inputValue","edit","id","notification","message","changeValue","e","setState","target","value","savePost","collection","add","post","then","catch","update","getPosts","docRef","doc","get","exists","data","console","log","error","deletePost","delete","componentDidMount","onSnapshot","snapShots","docs","map","handleLogout","auth","signOut","result","user","email","code","render","undefined","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { db, firebase } from '../firebase';\r\nimport Logo from '../img/logo.png';\r\n\r\n\r\nexport default class Home extends Component {\r\n  \r\n        state = {\r\n            posts:[],\r\n            inputValue:\"\",\r\n            edit:false,\r\n            id:\"\",\r\n            notification:false,\r\n            message:\"\",\r\n        }\r\n    \r\n    \r\n        componentDidMount() {\r\n            db.collection(\"userPosts\").onSnapshot((snapShots) => {\r\n                this.setState({\r\n                    posts:snapShots.docs.map(doc => {\r\n                        return {id:doc.id, data:doc.data()}\r\n                    })\r\n                })\r\n            })\r\n        }\r\n    // Funci贸n para Cerrar Sesi贸n\r\n    handleLogout () {\r\n    firebase.auth().signOut()\r\n    .then(result => console.log(`${result.user.email} ha cerrado sesi贸n`))\r\n    .catch(error => console.log(`Error ${error.code}: ${error.message}`));\r\n}\r\n    //Funci贸n que actualiza el estado para colocarle el valor que tiene el input de comentario\r\n    changeValue = (e) => {\r\n        this.setState({\r\n            inputValue:e.target.value\r\n        })\r\n    };\r\n    // funci贸n que permite guardar el post nuevo en la colecci贸n de firebase\r\n    savePost = () => {\r\n        const { inputValue, edit } = this.state;\r\n        !edit ?\r\n        db.collection(\"userPosts\").add({\r\n            post:inputValue\r\n        }).then(()=>{\r\n            this.message('agregado');\r\n        }).catch(()=>{\r\n            this.message('error')\r\n        }) :\r\n        this.update();\r\n        this.setState({\r\n         inputValue:\"\",\r\n        })\r\n    }\r\n    //Funci贸n que toma el id del documento, y  muestra el documento en el input para que pueda ser editado\r\n    getPosts= (id) => {\r\n        let docRef = db.collection(\"userPosts\").doc(id);\r\n        docRef.get().then((doc)=>{\r\n            if(doc.exists){\r\n                this.setState({\r\n                    inputValue:doc.data().post,\r\n                    edit:true,\r\n                    id:doc.id\r\n                })\r\n            }else {\r\n                console.log('El documento no existe')\r\n            }\r\n        }).catch((error)=> {\r\n            console.log(error);\r\n        })\r\n     }\r\n    //Funci贸n que actualiza el post editado\r\n    update = () => {\r\n        const { id, inputValue } = this.state;\r\n        db.collection(\"userPosts\").doc(id).update({\r\n            post: inputValue\r\n        }).then(() => {\r\n            this.message('actualizado');\r\n        }).catch((error) => {\r\n            this.message('error');\r\n        })\r\n    } \r\n\r\n    //Funci贸n que elimina el post seleccionado\r\n    deletePost = (id) => {\r\n        db.collection(\"userPosts\").doc(id).delete();\r\n    }\r\n    message = (message) => {\r\n        this.setState({\r\n            notification:true,\r\n            message: message\r\n        })\r\n    }\r\n    render() {\r\n        const { posts, inputValue, notification, message } = this.state;\r\n        return(\r\n            <fragment>\r\n                <nav>\r\n                            <div class=\"nav-wrapper orange\">\r\n                            <a href=\"#\" src={Logo} class=\"brand-logo\"></a>\r\n                            <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\r\n                                <li><a href=\"sass.html\">Inicio</a></li>\r\n                                <li><a href=\"badges.html\">Mi Perfil</a></li>\r\n                                \r\n                            </ul>\r\n                            </div>\r\n                        </nav>\r\n                <div className='container'>\r\n                \r\n                                        \r\n                        \r\n                     <img className=\"imgLogo\" alt=\"logo\" src={Logo} />\r\n                      <div className=\"createPost\">\r\n                     <h5 className=\"white-text\">Realizar una Nueva Publicaci贸n</h5>\r\n                     <input type=\"text\" value={inputValue} onChange={this.changeValue}/>\r\n                     <button  className=\"btn orange\" onClick={this.savePost}>Publicar</button>\r\n                    \r\n                 </div>\r\n                 <div className=\"showPost\">\r\n                     {posts && posts !== undefined ? posts.map((post, key)=>{\r\n                         return (\r\n                             <div key={key}>\r\n                                 <h4 className=\"white-text\">{post.data.post}</h4>\r\n                                 <button className=\"btn orange\" onClick={() => this.getPosts(post.id)}>Editar</button>\r\n                                 <button className=\"btn orange\" onClick={() => this.deletePost(post.id)}>Eliminar</button>\r\n                             </div>\r\n                         )\r\n                     }): null}\r\n                 \r\n                 </div>\r\n                \r\n    \r\n                <Link to='/'>\r\n                <button className=\"btn orange\" onClick={this.handleLogout}>Cerrar Sesi贸n</button>\r\n                </Link>\r\n               \r\n            </div>  \r\n            </fragment>\r\n            \r\n        );\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}