{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodri\\\\Desktop\\\\mis proyectos\\\\SCL012-Social-Network-Frameworks\\\\social-network\\\\src\\\\views\\\\Home.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { db, firebase } from '../firebase';\nimport Logo from '../img/logo.png';\nexport default class Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: [],\n      inputValue: \"\",\n      edit: false,\n      id: \"\"\n    };\n\n    this.changeValue = e => {\n      e.preventDefault();\n      this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    this.savePost = () => {\n      const {\n        inputValue,\n        edit\n      } = this.state;\n      !edit ? db.collection(\"userPosts\").add({\n        post: inputValue\n      }).then(() => {\n        console.log('agregado');\n      }).catch(() => {\n        console.log('error');\n      }) : this.update();\n    };\n\n    this.getPosts = id => {\n      let docRef = db.collection(\"userPosts\").doc(id);\n      docRef.get().then(doc => {\n        if (doc.id !== null && doc.id !== undefined) {\n          this.setState({\n            inputValue: doc.data().post,\n            edit: true,\n            id: doc.id\n          });\n        } else {\n          console.log('El documento no existe');\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.update = () => {\n      const {\n        id,\n        inputValue\n      } = this.state;\n      db.collection(\"userPosts\").doc(id).update({\n        item: inputValue\n      }).then(() => {\n        console.log('actualizado');\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  }\n\n  componentDidMount() {\n    const posts = [];\n    db.collection('userPosts').onSnapshot(snapShots => {\n      snapShots.docs.map(doc => {\n        const userPost = doc.data();\n        posts.push(userPost);\n        console.log(\"este es el state\", this.state);\n      });\n      this.setState({\n        posts\n      });\n      console.log('este es el estado actualizado', this.state);\n    });\n  } // Función para Cerrar Sesión\n\n\n  handleLogout() {\n    firebase.auth().signOut().then(result => console.log(`${result.user.email} ha cerrado sesión`)).catch(error => console.log(`Error ${error.code}: ${error.message}`));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"fragment\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"imgLogo\",\n      alt: \"logo\",\n      src: Logo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createPost\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 22\n      }\n    }, \"Realizar una Nueva Publicaci\\xF3n\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.inputValue,\n      onChange: this.changeValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"bnt\",\n      onClick: this.savePost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 22\n      }\n    }, \"Publicar\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"showPost\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 18\n      }\n    }, this.state.posts.map((post, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 30\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 34\n        }\n      }, post.post), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn\",\n        onClick: () => this.getPosts(post.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 34\n        }\n      }, \"Editar\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 34\n        }\n      }, \"Eliminar\"));\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.handleLogout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, \"Cerrar Sesi\\xF3n\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/rodri/Desktop/mis proyectos/SCL012-Social-Network-Frameworks/social-network/src/views/Home.jsx"],"names":["React","Component","Link","db","firebase","Logo","Home","state","posts","inputValue","edit","id","changeValue","e","preventDefault","setState","target","value","savePost","collection","add","post","then","console","log","catch","update","getPosts","docRef","doc","get","undefined","data","error","item","componentDidMount","onSnapshot","snapShots","docs","map","userPost","push","handleLogout","auth","signOut","result","user","email","code","message","render","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { db, firebase } from '../firebase';\r\nimport Logo from '../img/logo.png';\r\n\r\n\r\nexport default class Home extends Component {\r\n  \r\n        state = {\r\n            posts:[],\r\n            inputValue:\"\",\r\n            edit:false,\r\n            id:\"\",\r\n        }\r\n    \r\n    \r\n    componentDidMount() {\r\n      const posts=[];\r\n         db.collection('userPosts').onSnapshot((snapShots) => {\r\n            snapShots.docs.map(doc => {\r\n                    \r\n                    const userPost = (doc.data());\r\n                    posts.push(userPost);\r\n                    console.log(\"este es el state\", this.state)\r\n\r\n                });\r\n\r\n                this.setState({\r\n                    posts,\r\n                });\r\n                console.log('este es el estado actualizado', this.state)\r\n                \r\n            })\r\n            \r\n        }\r\n    \r\n    // Función para Cerrar Sesión\r\n    handleLogout () {\r\n    firebase.auth().signOut()\r\n    .then(result => console.log(`${result.user.email} ha cerrado sesión`))\r\n    .catch(error => console.log(`Error ${error.code}: ${error.message}`));\r\n}\r\n\r\n    changeValue = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            inputValue:e.target.value\r\n        })\r\n    };\r\n\r\n    savePost = () => {\r\n        const { inputValue, edit } = this.state;\r\n        !edit ?\r\n        db.collection(\"userPosts\").add({\r\n            post:inputValue\r\n        }).then(()=>{\r\n            console.log('agregado');\r\n        }).catch(()=>{\r\n            console.log('error')\r\n        }) :\r\n        this.update();\r\n    }\r\n\r\n    getPosts = (id) => {\r\n        let docRef = db.collection(\"userPosts\").doc(id);\r\n        docRef.get().then((doc)=>{\r\n            if (doc.id !== null && doc.id !== undefined){\r\n                this.setState({\r\n                    inputValue:doc.data().post,\r\n                    edit:true,\r\n                    id:doc.id\r\n                })\r\n            }else {\r\n                console.log('El documento no existe')\r\n            }\r\n        }).catch((error)=> {\r\n            console.log(error);\r\n        })\r\n    }\r\n    \r\n    update = () => {\r\n        const { id, inputValue } = this.state;\r\n        db.collection(\"userPosts\").doc(id).update({\r\n            item: inputValue\r\n        }).then(() => {\r\n            console.log('actualizado');\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    } \r\n\r\n    render() {\r\n        return(\r\n            <fragment>\r\n                <div className='container'>\r\n                 <img className=\"imgLogo\" alt=\"logo\" src={Logo} />\r\n                 <div className=\"createPost\">\r\n                     <h5>Realizar una Nueva Publicación</h5>\r\n                     <input type=\"text\" value={this.state.inputValue} onChange={this.changeValue}/>\r\n                     <button className=\"bnt\" onClick={this.savePost}>Publicar</button>\r\n                 </div>\r\n                 <div className=\"showPost\">\r\n                     {this.state.posts.map((post, key)=>{\r\n                         return (\r\n                             <div key={key}>\r\n                                 <h4 className=\"white-text\">{post.post}</h4>\r\n                                 <button className=\"btn\" onClick={()=>this.getPosts(post.id)}>Editar</button>\r\n                                 <button className=\"btn\">Eliminar</button>\r\n                             </div>\r\n                         )\r\n                     })}\r\n                 \r\n                 </div>\r\n                \r\n    \r\n                <Link to='/'>\r\n                <button className=\"btn\" onClick={this.handleLogout}>Cerrar Sesión</button>\r\n                </Link>\r\n               \r\n            </div>  \r\n            </fragment>\r\n            \r\n        );\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}