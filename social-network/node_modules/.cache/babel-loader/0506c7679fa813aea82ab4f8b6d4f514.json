{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodri\\\\Desktop\\\\mis proyectos\\\\SCL012-Social-Network-Frameworks\\\\social-network\\\\src\\\\views\\\\Login.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { firebase } from '../firebase';\nimport Logo from '../img/logo.png';\nimport Brujo from '../img/brujo.png';\nconst styles = {\n  imgDiv: {\n    diplay: 'flex',\n    justifyContent: 'center'\n  }\n};\nexport default class Login extends Component {\n  // constructor() {\n  //     super();\n  //     this.state = {\n  //         user: null\n  //     };\n  //     this.handleAuth=this.handleAuth.bind(this);\n  //     this.handleLogout=this.handleLogout.bind(this);\n  // }\n  // /* Mediante este método verificamos si el user tiene algún contenido y si tiene contenido actualizamos el estado\n  // y el componente se vuelve a renderizar*/ \n  // componentWillMount () {\n  //     firebase.auth().onAuthStateChanged(user => {\n  //         this.setState ({ user });   \n  //     })\n  // }\n  // Función para iniciar Sesión\n  handleAuth() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(result => console.log(`${result.user.email} ha iniciado sesión`)).catch(error => console.log(`Error ${error.code}: ${error.message}`));\n  } // Función que verifica si el usuario esta logueado o no\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loginPage container row section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.imgDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"imgLogo center\",\n      alt: \"logo\",\n      src: Logo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"login\",\n      id: \"correo\",\n      placeholder: \"Correo Electr\\xF3nico\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"password\",\n      id: \"contrase\\xF1a\",\n      placeholder: \"Contrase\\xF1a\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \"Iniciar Sesi\\xF3n\"), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"brujo\",\n      alt: \"brujo\",\n      src: Brujo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\\r \",\n      onClick: this.handleAuth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, \"Login con Google\")));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/rodri/Desktop/mis proyectos/SCL012-Social-Network-Frameworks/social-network/src/views/Login.jsx"],"names":["React","Component","Link","firebase","Logo","Brujo","styles","imgDiv","diplay","justifyContent","Login","handleAuth","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","console","log","user","email","catch","error","code","message","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAE,MADJ;AAEJC,IAAAA,cAAc,EAAE;AAFZ;AADG,CAAf;AASC,eAAe,MAAMC,KAAN,SAAoBT,SAApB,CAA8B;AAC1C;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACAU,EAAAA,UAAU,GAAI;AACV,UAAMC,QAAQ,GAAG,IAAIT,QAAQ,CAACU,IAAT,CAAcC,kBAAlB,EAAjB;AAEAX,IAAAA,QAAQ,CAACU,IAAT,GAAgBE,eAAhB,CAAgCH,QAAhC,EACCI,IADD,CACMC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAa,GAAEF,MAAM,CAACG,IAAP,CAAYC,KAAM,qBAAjC,CADhB,EAECC,KAFD,CAEOC,KAAK,IAAIL,OAAO,CAACC,GAAR,CAAa,SAAQI,KAAK,CAACC,IAAK,KAAID,KAAK,CAACE,OAAQ,EAAlD,CAFhB;AAGH,GAzByC,CA2B1C;;;AAEAC,EAAAA,MAAM,GAAI;AACN,wBACU;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAEpB,MAAM,CAACC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,GAAG,EAAC,MAApC;AAA2C,MAAA,GAAG,EAAEH,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ,eAIF;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,OAA7B;AAAqC,MAAA,EAAE,EAAC,QAAxC;AAAiD,MAAA,WAAW,EAAC,uBAA7D;AAAkF,MAAA,QAAQ,MAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJE,eAKF;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,UAA7B;AAAwC,MAAA,EAAE,EAAC,eAA3C;AAAwD,MAAA,WAAW,EAAC,eAApE;AAAiF,MAAA,QAAQ,MAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALE,eAMF,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADA,eAEA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,GAAG,EAAC,OAA3B;AAAmC,MAAA,GAAG,EAAEC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAGA;AAAQ,MAAA,SAAS,EAAC,QAAlB;AACE,MAAA,OAAO,EAAE,KAAKM,UADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHA,CANE,CADV;AAiBH;;AA/CyC","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { firebase } from '../firebase';\r\nimport Logo from '../img/logo.png';\r\nimport Brujo from '../img/brujo.png';\r\n\r\nconst styles = {\r\n    imgDiv: {\r\n        diplay: 'flex',\r\n        justifyContent: 'center',\r\n    }\r\n}\r\n\r\n\r\n\r\n export default class Login extends Component {\r\n    // constructor() {\r\n    //     super();\r\n    //     this.state = {\r\n    //         user: null\r\n    //     };\r\n        \r\n    //     this.handleAuth=this.handleAuth.bind(this);\r\n    //     this.handleLogout=this.handleLogout.bind(this);\r\n    // }\r\n    // /* Mediante este método verificamos si el user tiene algún contenido y si tiene contenido actualizamos el estado\r\n    // y el componente se vuelve a renderizar*/ \r\n    \r\n    // componentWillMount () {\r\n    //     firebase.auth().onAuthStateChanged(user => {\r\n    //         this.setState ({ user });   \r\n    //     })\r\n    // }\r\n    // Función para iniciar Sesión\r\n    handleAuth () {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n        firebase.auth().signInWithPopup(provider)\r\n        .then(result => console.log(`${result.user.email} ha iniciado sesión`))\r\n        .catch(error => console.log(`Error ${error.code}: ${error.message}`));\r\n    }\r\n    \r\n    // Función que verifica si el usuario esta logueado o no\r\n    \r\n    render () {\r\n        return(\r\n                  <div className=\"loginPage container row section\">\r\n                      <div style={styles.imgDiv}>\r\n                      <img className=\"imgLogo center\" alt=\"logo\" src={Logo} />\r\n                      </div>  \r\n                <input type=\"text\" className=\"login\" id=\"correo\" placeholder=\"Correo Electrónico\" required />\r\n                <input type=\"text\" className=\"password\" id=\"contraseña\" placeholder=\"Contraseña\" required />\r\n                <Link to='/Home'>\r\n                <button className=\"btn\">Iniciar Sesión</button>  \r\n                <img className=\"brujo\" alt=\"brujo\" src={Brujo} />  \r\n                <button className=\"btn\r\n                \" onClick={this.handleAuth}>Login con Google</button>  \r\n                </Link>  \r\n            </div>\r\n           \r\n          \r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}